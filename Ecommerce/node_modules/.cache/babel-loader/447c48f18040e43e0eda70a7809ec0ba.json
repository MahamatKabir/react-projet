{"ast":null,"code":"/** @license Material-UI v5.0.0-beta.5\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport emStyled from '@emotion/styled';\nexport default function styled(tag, options) {\n  const stylesFactory = emStyled(tag, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function () {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n\n      for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n        styles[_key] = arguments[_key];\n      }\n\n      if (styles.length === 0) {\n        console.error([`Material-UI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`Material-UI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n\n      return stylesFactory(...styles);\n    };\n  }\n\n  return stylesFactory;\n}\nexport { ThemeContext, keyframes, css } from '@emotion/react';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';","map":{"version":3,"sources":["C:/Users/90539/Desktop/react-m-projet/netflix-projet/Ecommerce/node_modules/@material-ui/styled-engine/index.js"],"names":["emStyled","styled","tag","options","stylesFactory","process","env","NODE_ENV","component","styles","length","console","error","join","some","style","undefined","ThemeContext","keyframes","css","default","StyledEngineProvider","GlobalStyles"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,iBAArB;AACA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;AAC3C,QAAMC,aAAa,GAAGJ,QAAQ,CAACE,GAAD,EAAMC,OAAN,CAA9B;;AAEA,MAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,WAAO,YAAe;AACpB,YAAMC,SAAS,GAAG,OAAON,GAAP,KAAe,QAAf,GAA2B,IAAGA,GAAI,GAAlC,GAAuC,WAAzD;;AADoB,wCAAXO,MAAW;AAAXA,QAAAA,MAAW;AAAA;;AAGpB,UAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACvBC,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAE,+CAA8CJ,SAAU,qCAA1D,EAAgG,8EAAhG,EAAgLK,IAAhL,CAAqL,IAArL,CAAd;AACD,OAFD,MAEO,IAAIJ,MAAM,CAACK,IAAP,CAAYC,KAAK,IAAIA,KAAK,KAAKC,SAA/B,CAAJ,EAA+C;AACpDL,QAAAA,OAAO,CAACC,KAAR,CAAe,2BAA0BJ,SAAU,qDAAnD;AACD;;AAED,aAAOJ,aAAa,CAAC,GAAGK,MAAJ,CAApB;AACD,KAVD;AAWD;;AAED,SAAOL,aAAP;AACD;AACD,SAASa,YAAT,EAAuBC,SAAvB,EAAkCC,GAAlC,QAA6C,gBAA7C;AACA,SAASC,OAAO,IAAIC,oBAApB,QAAgD,wBAAhD;AACA,SAASD,OAAO,IAAIE,YAApB,QAAwC,gBAAxC","sourcesContent":["/** @license Material-UI v5.0.0-beta.5\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport emStyled from '@emotion/styled';\nexport default function styled(tag, options) {\n  const stylesFactory = emStyled(tag, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n\n      if (styles.length === 0) {\n        console.error([`Material-UI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`Material-UI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n\n      return stylesFactory(...styles);\n    };\n  }\n\n  return stylesFactory;\n}\nexport { ThemeContext, keyframes, css } from '@emotion/react';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';"]},"metadata":{},"sourceType":"module"}