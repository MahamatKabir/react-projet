{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest } from \"../requestMethods\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    //const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};","map":{"version":3,"sources":["C:/Users/90539/Desktop/react-m-projet/netflix-projet/Ecommerce/client/src/redux/apiCalls.js"],"names":["loginFailure","loginStart","loginSuccess","publicRequest","login","dispatch","user","res","post","data","err","deleteProduct","id","deleteProductStart","deleteProductSuccess","deleteProductFailure"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAC7CD,EAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMJ,aAAa,CAACK,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;AACAD,IAAAA,QAAQ,CAACH,YAAY,CAACK,GAAG,CAACE,IAAL,CAAb,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMW,aAAa,GAAG,OAAOC,EAAP,EAAWP,QAAX,KAAwB;AACnDA,EAAAA,QAAQ,CAACQ,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACD;AACDR,IAAAA,QAAQ,CAACS,oBAAoB,CAACF,EAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOF,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACU,oBAAoB,EAArB,CAAR;AACD;AACF,CARM","sourcesContent":["import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest } from \"../requestMethods\";\n\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\n\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n  try {\n     //const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}