{"ast":null,"code":"import { useState, useContext, useReducer, useEffect, createElement, createContext } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction useLocalStorage(key, initialValue) {\n  var _React$useState = useState(function () {\n    try {\n      var item = typeof window !== \"undefined\" && window.localStorage.getItem(key);\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  }),\n      storedValue = _React$useState[0],\n      setStoredValue = _React$useState[1];\n\n  var setValue = function setValue(value) {\n    try {\n      var valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nvar initialState = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {}\n};\nvar CartContext = /*#__PURE__*/createContext(initialState);\n\nvar createCartIdentifier = function createCartIdentifier(len) {\n  if (len === void 0) {\n    len = 12;\n  }\n\n  return [].concat(Array(len)).map(function () {\n    return (~~(Math.random() * 36)).toString(36);\n  }).join(\"\");\n};\n\nvar useCart = function useCart() {\n  var context = useContext(CartContext);\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n  return context;\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\":\n      {\n        var items = [].concat(state.items, [action.payload]);\n        return generateCartState(state, items);\n      }\n\n    case \"UPDATE_ITEM\":\n      {\n        var _items = state.items.map(function (item) {\n          if (item.id !== action.id) return item;\n          return _extends({}, item, action.payload);\n        });\n\n        return generateCartState(state, _items);\n      }\n\n    case \"REMOVE_ITEM\":\n      {\n        var _items2 = state.items.filter(function (i) {\n          return i.id !== action.id;\n        });\n\n        return generateCartState(state, _items2);\n      }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return _extends({}, state, {\n        metadata: {}\n      });\n\n    case \"SET_CART_META\":\n      return _extends({}, state, {\n        metadata: _extends({}, action.payload)\n      });\n\n    case \"UPDATE_CART_META\":\n      return _extends({}, state, {\n        metadata: _extends({}, state.metadata, action.payload)\n      });\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nvar generateCartState = function generateCartState(state, items) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  var totalUniqueItems = calculateUniqueItems(items);\n  var isEmpty = totalUniqueItems === 0;\n  return _extends({}, initialState, state, {\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems: totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty: isEmpty\n  });\n};\n\nvar calculateItemTotals = function calculateItemTotals(items) {\n  return items.map(function (item) {\n    return _extends({}, item, {\n      itemTotal: item.price * item.quantity\n    });\n  });\n};\n\nvar calculateTotal = function calculateTotal(items) {\n  return items.reduce(function (total, item) {\n    return total + item.quantity * item.price;\n  }, 0);\n};\n\nvar calculateTotalItems = function calculateTotalItems(items) {\n  return items.reduce(function (sum, item) {\n    return sum + item.quantity;\n  }, 0);\n};\n\nvar calculateUniqueItems = function calculateUniqueItems(items) {\n  return items.length;\n};\n\nvar CartProvider = function CartProvider(_ref) {\n  var children = _ref.children,\n      cartId = _ref.id,\n      _ref$defaultItems = _ref.defaultItems,\n      defaultItems = _ref$defaultItems === void 0 ? [] : _ref$defaultItems,\n      onSetItems = _ref.onSetItems,\n      onItemAdd = _ref.onItemAdd,\n      onItemUpdate = _ref.onItemUpdate,\n      onItemRemove = _ref.onItemRemove,\n      _ref$storage = _ref.storage,\n      storage = _ref$storage === void 0 ? useLocalStorage : _ref$storage,\n      metadata = _ref.metadata;\n  var id = cartId ? cartId : createCartIdentifier();\n\n  var _storage = storage(cartId ? \"react-use-cart-\" + id : \"react-use-cart\", JSON.stringify(_extends({\n    id: id\n  }, initialState, {\n    items: defaultItems,\n    metadata: metadata\n  }))),\n      savedCart = _storage[0],\n      saveCart = _storage[1];\n\n  var _React$useReducer = useReducer(reducer, JSON.parse(savedCart)),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  useEffect(function () {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  var setItems = function setItems(items) {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(function (item) {\n        return _extends({}, item, {\n          quantity: item.quantity || 1\n        });\n      })\n    });\n    onSetItems && onSetItems(items);\n  };\n\n  var addItem = function addItem(item, quantity) {\n    if (quantity === void 0) {\n      quantity = 1;\n    }\n\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n    var currentItem = state.items.find(function (i) {\n      return i.id === item.id;\n    });\n    if (!currentItem && !item.hasOwnProperty(\"price\")) throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      var _payload = _extends({}, item, {\n        quantity: quantity\n      });\n\n      dispatch({\n        type: \"ADD_ITEM\",\n        payload: _payload\n      });\n      onItemAdd && onItemAdd(_payload);\n      return;\n    }\n\n    var payload = _extends({}, item, {\n      quantity: currentItem.quantity + quantity\n    });\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  var updateItem = function updateItem(id, payload) {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  var updateItemQuantity = function updateItemQuantity(id, quantity) {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n      dispatch({\n        type: \"REMOVE_ITEM\",\n        id: id\n      });\n      return;\n    }\n\n    var currentItem = state.items.find(function (item) {\n      return item.id === id;\n    });\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    var payload = _extends({}, currentItem, {\n      quantity: quantity\n    });\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  var removeItem = function removeItem(id) {\n    if (!id) return;\n    dispatch({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n    onItemRemove && onItemRemove(id);\n  };\n\n  var emptyCart = function emptyCart() {\n    return dispatch({\n      type: \"EMPTY_CART\"\n    });\n  };\n\n  var getItem = function getItem(id) {\n    return state.items.find(function (i) {\n      return i.id === id;\n    });\n  };\n\n  var inCart = function inCart(id) {\n    return state.items.some(function (i) {\n      return i.id === id;\n    });\n  };\n\n  var clearCartMetadata = function clearCartMetadata() {\n    dispatch({\n      type: \"CLEAR_CART_META\"\n    });\n  };\n\n  var setCartMetadata = function setCartMetadata(metadata) {\n    if (!metadata) return;\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata\n    });\n  };\n\n  var updateCartMetadata = function updateCartMetadata(metadata) {\n    if (!metadata) return;\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata\n    });\n  };\n\n  return createElement(CartContext.Provider, {\n    value: _extends({}, state, {\n      getItem: getItem,\n      inCart: inCart,\n      setItems: setItems,\n      addItem: addItem,\n      updateItem: updateItem,\n      updateItemQuantity: updateItemQuantity,\n      removeItem: removeItem,\n      emptyCart: emptyCart,\n      clearCartMetadata: clearCartMetadata,\n      setCartMetadata: setCartMetadata,\n      updateCartMetadata: updateCartMetadata\n    })\n  }, children);\n};\n\nexport { CartProvider, createCartIdentifier, initialState, useCart };","map":{"version":3,"sources":["../src/useLocalStorage.ts","../src/index.tsx"],"names":["useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","setValue","valueToStore","value","console","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","React","createCartIdentifier","len","Array","Math","useCart","context","action","generateCartState","state","i","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","quantity","total","sum","CartProvider","children","id","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","savedCart","saveCart","dispatch","JSON","setItems","type","payload","addItem","currentItem","updateItem","updateItemQuantity","removeItem","emptyCart","getItem","inCart","clearCartMetadata","setCartMetadata","updateCartMetadata"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (id: Item[\"id\"]) => void;\n  updateItem: (id: Item[\"id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (id: Item[\"id\"]) => any | undefined;\n  inCart: (id: Item[\"id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      id: Item[\"id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item.id !== action.id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i.id !== action.id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (id: Item[\"id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${id}` : `react-use-cart`,\n    JSON.stringify({\n      id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (id: Item[\"id\"], payload: object) => {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n\n      dispatch({ type: \"REMOVE_ITEM\", id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item.id === id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (id: Item[\"id\"]) => {\n    if (!id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", id });\n\n    onItemRemove && onItemRemove(id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (id: Item[\"id\"]) =>\n    state.items.find((i: Item) => i.id === id);\n\n  const inCart = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}