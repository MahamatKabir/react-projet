{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSucess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSucess,\n  loginFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/90539/Desktop/react-m-projet/netflix-projet/Ecommerce/client/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSucess","action","payload","loginFailure","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,UAAU,EAAE,KAFA;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACJ,UAAN,GAAkB,IAAlB;AAED,KAJO;AAKRK,IAAAA,WAAW,EAAE,CAACD,KAAD,EAAOE,MAAP,KAAkB;AAC3BF,MAAAA,KAAK,CAACJ,UAAN,GAAkB,KAAlB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAkBO,MAAM,CAACC,OAAzB;AAEH,KATO;AAUNC,IAAAA,YAAY,EAAGJ,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACJ,UAAN,GAAkB,KAAlB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AAEH;AAdO;AAPkB,CAAD,CAA7B;AAyBA,OAAO,MAAM;AAAEE,EAAAA,UAAF;AAAaE,EAAAA,WAAb;AAAyBG,EAAAA;AAAzB,IAA0CZ,SAAS,CAACa,OAA1D;AACP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    currentUser: null,\r\n    isFetching: false,\r\n    error: false,\r\n  },\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.isFetching =true;\r\n     \r\n    },\r\n    loginSucess: (state,action) => {\r\n        state.isFetching =false;\r\n        state.currentUser=action.payload;\r\n       \r\n    },\r\n      loginFailure: (state) => {\r\n        state.isFetching =false;\r\n        state.error = true;\r\n       \r\n    },\r\n  },\r\n});\r\n\r\nexport const { loginStart,loginSucess,loginFailure } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}