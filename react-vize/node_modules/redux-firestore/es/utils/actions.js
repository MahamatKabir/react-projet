'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mapValues2 = require('lodash/mapValues');

var _mapValues3 = _interopRequireDefault(_mapValues2);

var _isFunction2 = require('lodash/isFunction');

var _isFunction3 = _interopRequireDefault(_isFunction2);

var _isObject2 = require('lodash/isObject');

var _isObject3 = _interopRequireDefault(_isObject2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.wrapInDispatch = wrapInDispatch;
exports.mapWithFirebaseAndDispatch = mapWithFirebaseAndDispatch;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function makePayload(_ref, valToPass) {
  var payload = _ref.payload;

  return (0, _isFunction3.default)(payload) ? payload(valToPass) : payload;
}

function wrapInDispatch(dispatch, _ref2) {
  var ref = _ref2.ref,
      _ref2$meta = _ref2.meta,
      meta = _ref2$meta === undefined ? {} : _ref2$meta,
      method = _ref2.method,
      _ref2$args = _ref2.args,
      args = _ref2$args === undefined ? [] : _ref2$args,
      types = _ref2.types;

  var _types = _slicedToArray(types, 3),
      requestingType = _types[0],
      successType = _types[1],
      errorType = _types[2];

  dispatch({
    type: (0, _isObject3.default)(requestingType) ? requestingType.type : requestingType,
    meta: meta,
    payload: (0, _isObject3.default)(requestingType) ? requestingType.payload : { args: args }
  });
  return ref[method].apply(ref, _toConsumableArray(args)).then(function (result) {
    var successIsObject = (0, _isObject3.default)(successType);

    var actionObj = {
      type: successIsObject ? successType.type : successType,
      meta: meta,
      payload: successIsObject && successType.payload ? makePayload(successType, result) : { args: args }
    };

    if (successIsObject && successType.preserve) {
      actionObj.preserve = successType.preserve;
    }

    if (successIsObject && successType.merge) {
      actionObj.merge = successType.merge;
    }
    dispatch(actionObj);
    return result;
  }).catch(function (err) {
    dispatch({
      type: errorType,
      meta: meta,
      payload: err
    });
    return Promise.reject(err);
  });
}

function createWithFirebaseAndDispatch(firebase, dispatch) {
  return function (func) {
    return function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return func.apply(firebase, [firebase, dispatch].concat(args));
    };
  };
}

function mapWithFirebaseAndDispatch(firebase, dispatch, actions, aliases) {
  var withFirebaseAndDispatch = createWithFirebaseAndDispatch(firebase, dispatch);
  return _extends({}, (0, _mapValues3.default)(actions, withFirebaseAndDispatch), aliases.reduce(function (acc, _ref3) {
    var action = _ref3.action,
        name = _ref3.name;
    return _extends({}, acc, _defineProperty({}, name, withFirebaseAndDispatch(action)));
  }, {}));
}